name: PHP Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  call-composer-install:
    uses: ./.github/workflows/composer-install.yml
    secrets:
      REPO_READ_ONLY_TOKEN: ${{ secrets.REPO_READ_ONLY_TOKEN }}

  php-tests:
    needs:
      - call-composer-install
    runs-on: ubuntu-20.04

    services:
      postgres-1:
        image: postgres:12.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: portal_backend_testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      postgres-2:
        image: postgres:12.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: form_admin_web_testing
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: pcov
          extensions: xdebug, pgsql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.REPO_READ_ONLY_TOKEN }}"}}'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Execute tests with Code Coverage
        env:
          DB_APPLICATION_HOST: localhost
          DB_APPLICATION_DATABASE: portal_backend_testing
          DB_APPLICATION_PORT: 5432
          DB_APPLICATION_USERNAME: postgres
          DB_APPLICATION_PASSWORD: password
          DB_APPLICATION_SSLMODE: prefer

          DB_FORM_HOST: localhost
          DB_FORM_DATABASE: form_admin_web_testing
          DB_FORM_PORT: 5433
          DB_FORM_USERNAME: postgres
          DB_FORM_PASSWORD: password
          DB_FORM_SSLMODE: prefer
        run: vendor/bin/phpunit --coverage-clover tests/coverage.xml

      - if: ${{ github.event_name == 'pull_request' }}
        name: Download artifact
        uses: dawidd6/action-download-artifact@v2.27.0
        continue-on-error: true
        with:
          workflow: .github/workflows/php-tests.yml # this file
          branch: main
          name: php-tests
          path: tests/base

      - if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: php-tests
          path: tests/coverage.xml

      - name: Coverage Report as Comment (Clover)
        if: ${{ github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: lucassabreu/comment-coverage-clover@v0.10.2
        with:
          file: tests/coverage.xml
          base-file: tests/base/coverage.xml
