name: Generate Documentation - Architectuur

on:
  workflow_dispatch:
  push:
    tags:
      - v*


jobs:
  publish:
    runs-on: ubuntu-latest

    name: create documentation (pdf)

    strategy:
      matrix:
        include:
          - name: "Architectuur"
            directory: architectuur

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set proof release version
        run: echo "RELEASE_VERSION=proof" >> $GITHUB_ENV

      - name: Set release version based on tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "docs/${{ matrix.directory }}/*.md"

      - name: Concat manual files
        if: steps.check_files.outputs.files_exists == 'true'
        uses: bayssmekanique/action-md-concat@v1
        with:
          srcDir: docs/${{ matrix.directory }}
          destFile: "docs/${{ matrix.directory }}/${{ matrix.name }} ${{ env.RELEASE_VERSION }}.md"

      - name: Update template
        run: sed -i "s/{{{version}}}/$RELEASE_VERSION/g" .github/workflows/manual/pdf_template.html
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Publish document
        if: steps.check_files.outputs.files_exists == 'true'
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_path: "docs/${{ matrix.directory }}/${{ matrix.name }} ${{ env.RELEASE_VERSION }}.md"
          images_dir: docs/${{ matrix.directory }}/images
          output_dir: pdfs
          # for example <img src="./images/file-name.png">
          image_import: ./images
          build_html: false
          table_of_contents: true
          template: .github/workflows/manual/pdf_template.html
#          theme: .github/workflows/manual/manon-sky-blue.css
         
      - name: Upload manual documentation (pdf)
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        id: upload-document
        with:
          name: ${{ matrix.name }}
          path: pdfs
