name: Create RDO MaZi Package

on:
  push:
    tags:
      - v*

jobs:
  build-mazi:
    runs-on: ubuntu-20.04
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: pcov
          extensions: pgsql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.REPO_READ_ONLY_TOKEN }}"}}'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev

      - name: Clear config cache
        run: php artisan config:clear

      - name: Clear route cache
        run: php artisan route:clear

      - run: 'echo "{ \"version\": \"${{ env.RELEASE_VERSION }}\", \"git_ref\": \"$GITHUB_SHA\"}" > public/version.json'
        shell: bash

      - name: Create tar
        run: tar -czf ${{ github.event.repository.name }}_${{ env.RELEASE_VERSION }}.tar.gz ./app ./bootstrap ./config ./database ./lang ./public ./resources ./routes ./storage ./vendor ./composer.json

      - name: Upload release tar
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}_${{ env.RELEASE_VERSION }}
          path: ${{ github.event.repository.name }}_${{ env.RELEASE_VERSION }}.tar.gz

