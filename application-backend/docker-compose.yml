version: '3.9'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8001}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
            - '../shared:/var/www/html/vendor/minvws/dusi-shared'
            - '../bridge:/var/www/html/vendor/minvws/php-rmq-rpc-bridge'
        networks:
            portal-backend:
        depends_on:
            - pgsql
            - redis
    pgsql:
        environment:
            POSTGRES_PASSWORD: '${DB_APPLICATION_PASSWORD}'
            POSTGRES_USER: '${DB_APPLICATION_USERNAME}'
            POSTGRES_DB: '${DB_APPLICATION_DATABASE}'
        image: 'postgres:12'
        volumes:
            - 'pgsql:/var/lib/postgresql/data'
            - './tests/Scripts/create-testing-databases.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            portal-backend:
                aliases:
                    - portal-backend-pgsql
        ports:
            - '${POSTGRES_PORT:-9101}:5432'
    rabbitmq:
        image: 'rabbitmq:3.12-management'
        ports:
            - '${RABBITMQ_PORT:-9102}:5672'
            - '${RABBITMQ_MANAGEMENT_PORT:-9103}:15672'
        volumes:
            - './rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf'
            - './rabbitmq/definitions.json:/etc/rabbitmq/definitions.json'
        networks:
            portal-backend:
                aliases:
                    - portal-backend-rabbitmq
    bridge:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        command: 'php artisan bridge:run'
        restart: on-failure
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            LOG_CHANNEL: stderr
        volumes:
            - '.:/var/www/html'
            - '../shared:/var/www/html/vendor/minvws/dusi-shared'
            - '../bridge:/var/www/html/vendor/minvws/php-rmq-rpc-bridge'
        networks:
            portal-backend:
        depends_on:
            - pgsql
    hsm-api-service:
        image: 'ghcr.io/minvws/nl-rdo-hsm-api-service:v0.2.3'
        environment:
            USER_ID: '${WWWUSER:-1000}'
            GROUP_ID: '${WWWGROUP:-1000}'
        volumes:
            - 'hsm-tokens:/var/lib/softhsm/tokens'
            - './secrets:/src/secrets'
        ports:
            - '${HSM_PORT:-9104}:8000'
        networks:
            portal-backend:
                aliases:
                    - portal-backend-hsm-api-service
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-9105}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            portal-backend:
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    portal-backend:
        name: portal-backend
volumes:
    pgsql:
        driver: local
    sail-redis:
        driver: local
    hsm-tokens:
        driver: local
